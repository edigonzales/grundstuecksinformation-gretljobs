import ch.so.agi.gretl.tasks.*
import java.nio.file.Paths
import de.undercouch.gradle.tasks.download.Download

//defaultTasks "replaceCadastralSurveyingData"

def pathToTempFolder = tmpDir != null ? tmpDir : System.getProperty("java.io.tmpdir")
def pathToUnzipFolder = Paths.get(pathToTempFolder, "unzip_data")
def iliModelAmtlicheVermessung = "DM01AVCH24LV95D"
def dbSchema = "live" // live schema only at the moment

def dataSets = []

afterEvaluate {
    println pathToUnzipFolder
    def filenames = fileTree(dir: pathToUnzipFolder, includes: ['**/*.itf'])
    dataSets = fileTree(dir: pathToUnzipFolder, includes: ['**/*.itf']) 
    

    filenames.each { filename ->
        def dataSet = filename.getName()

        task "replaceDataSet_$dataSet"(type: Ili2pgReplace) {
            description = "Import AV-Datensatz: ${dataSet}"
            database = [dbUriGrundstuecksinformation, dbUserGrundstuecksinformation, dbPwdGrundstuecksinformation]
            models = iliModelAmtlicheVermessung
            dbschema = dbSchema
            dataFile = file(Paths.get(filename.getAbsolutePath()))
            dataset = dataSet
            disableValidation = true

            doLast {
                println "Data imported into db: " + dbUriGrundstuecksinformation
            }        
        }
    }
}

task replaceCadastralSurveyingData() {
    description = "Aggregationstask für das Importieren/Ersetzen sämtlicher AV-Daten."
    dependsOn {
        tasks.findAll { task -> task.name.startsWith('replaceDataSet_') }
    }    
}